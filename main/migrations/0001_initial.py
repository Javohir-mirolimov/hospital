# Generated by Django 5.0.2 on 2024-03-04 11:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import main.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='About_hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='nomi')),
                ('address', models.CharField(max_length=55, verbose_name='manzil')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator], verbose_name='elektiron manzil')),
                ('number_doctor', models.IntegerField(verbose_name='shifokor soni')),
                ('happy_patient', models.IntegerField(verbose_name='hursand bemor')),
                ('reting', models.FloatField(default=0, verbose_name='reting')),
                ('open_data', models.DateField(verbose_name='ochilgan vqat')),
                ('desctiption', models.CharField(max_length=255, verbose_name='tarif')),
                ('motto', models.CharField(max_length=55, verbose_name='shiyor')),
            ],
        ),
        migrations.CreateModel(
            name='Cassa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='pul')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='nomi')),
            ],
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255, verbose_name='sabab')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='pul')),
                ('create_at', models.DateField(auto_now=True, verbose_name='yaratilgan vaqt')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar_photo', validators=[main.validators.ImageFileValidator], verbose_name='hodim_rasmi')),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_number', message='Invalid phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='telefon raqam')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='yosh')),
                ('password_series', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'male'), ('female', 'female')], max_length=25, null=True, verbose_name='jinsi')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='manzil')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(max_length=40, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('director', 'direcotor'), ('admin', 'admin'), ('manager', 'manager'), ('cooker', 'cooker'), ('doctor', 'doctor'), ('nurse', 'nurse')], max_length=25, verbose_name='lavozimi')),
                ('experience', models.IntegerField(verbose_name='tajribasi')),
                ('bio', models.TextField(verbose_name="o'zi haqida ma'lumot")),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='oylik')),
                ('start_time', models.TimeField(verbose_name='ish boshlash vaqti')),
                ('end_time', models.TimeField(verbose_name='ish tugatish vaqti')),
                ('create_at', models.DateField(auto_now=True, verbose_name='yaratilgan vaqt')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.department', verbose_name="bo'lim")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='foydalanuvchi')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=55)),
                ('address', models.CharField(max_length=55)),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_number', message='Invalid phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('photo', models.ImageField(blank=True, null=True, upload_to='avatar_paient/', validators=[main.validators.ImageFileValidator])),
                ('bio', models.TextField()),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], max_length=25)),
                ('type_payment', models.CharField(choices=[('full paid', 'full paid'), ('part paid', 'part paid'), ('unpaid', 'unpaid')], max_length=25)),
                ('create_at', models.DateField(auto_now=True, verbose_name='yaratilgan vaqt')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('full paid', 'full paid'), ('part paid', 'part paid'), ('unpaid', 'unpaid')], max_length=25, verbose_name='tolov turi')),
                ('create_at', models.DateField(auto_now=True, verbose_name='yaratishgan vaqt')),
                ('payer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient', verbose_name='bemor')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.employee', verbose_name='shifokor')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='nomi')),
                ('capacity', models.IntegerField(verbose_name='sigimi')),
                ('status', models.CharField(choices=[('lux', 'lux'), ('econom', 'econom'), ('other', 'ther')], max_length=24)),
                ('booked_room', models.BooleanField(default=False, verbose_name=' xona bosh va banligi')),
                ('other_info', models.TextField(verbose_name='malomot')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.department', verbose_name='bolim')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.room'),
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateField(verbose_name='boshlanadigan kun')),
                ('start_time', models.TimeField(verbose_name='aperatsi boshlanosh vaqti ')),
                ('end_time', models.TimeField(verbose_name='aperatsi tugash vaqti ')),
                ('create_at', models.DateField(auto_now=True, verbose_name='yaratilgan b-vaqt')),
                ('doctors', models.ManyToManyField(to='main.employee', verbose_name='xodim')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient', verbose_name='bemor')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.room', verbose_name='xona')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='ism')),
                ('number', models.IntegerField(verbose_name='soni')),
                ('extra_info', models.TextField(verbose_name='malumot')),
                ('rooms', models.ManyToManyField(to='main.room', verbose_name='xona')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.room', verbose_name='xona'),
        ),
        migrations.CreateModel(
            name='Testimonial_patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_testimonial', models.CharField(choices=[('offer', 'offer'), ('complaint', 'complaint'), ('testimonial', 'testimonial')], max_length=25, verbose_name='izoh turi')),
                ('text', models.TextField(verbose_name='izoh')),
                ('create_at', models.DateField(auto_now=True, verbose_name='yaratilgan vaqt')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient', verbose_name='bemor')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('check_in', models.DateField(blank=True, null=True)),
                ('check_out', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.employee')),
            ],
            options={
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
